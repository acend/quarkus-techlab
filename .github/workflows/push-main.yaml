name: Publish Main Version

on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up npm for linting
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Lint Markdown
        run: npm ci && npm run mdlint

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Quay.io Container Registry
        uses: docker/login-action@v2
        with:
          registry: registry.puzzle.ch
          username: ${{ secrets.PUZZLE_REG_USERNAME }}
          password: ${{ secrets.PUZZLE_REG_TOKEN }}

      - name: Build Puzzle Version
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            registry.puzzle.ch/puzzle/quarkus-techlab:latest

      - name: Run vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'registry.puzzle.ch/puzzle/quarkus-techlab:latest'
          format: 'table'
          output: 'trivy-results.txt'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os'
          severity: 'CRITICAL,HIGH'

      - name: Archive vulnerability scan results
        uses: actions/upload-artifact@v2
        with:
          name: trivy-results-main
          path: trivy-results.txt

      - name: Build Mobi Version
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            TRAINING_HUGO_ENV=mobi
          push: true
          tags: |
            registry.puzzle.ch/puzzle/quarkus-techlab:latest-mobi

      - name: 'Install Helm'
        uses: azure/setup-helm@v1
        with:
          version: v3.6.2

      - name: Install Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: v1.21.2

      - name: Create KUBECONFIG
        env:
          KUBE_CONFIG: '${{ secrets.KUBECONFIG_CLOUDSCALE }}'
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBE_CONFIG" > $HOME/.kube/config

      - name: Deploy Helm Release
        env:
          TRAINING_HELM_RELEASE: 'latest'
          TRAINING_NAMESPACE: 'pitc-quarkus-techlab-prod'
          TRAINING_VERSION: '${{ github.sha }}'
        run: |
          helm upgrade $TRAINING_HELM_RELEASE acend-training-chart --install --wait \
            --kubeconfig $HOME/.kube/config \
            --namespace=$TRAINING_NAMESPACE \
            --set=app.name=$HELM_RELEASE \
            --set=app.version=$TRAINING_VERSION \
            --repo=https://acend.github.io/helm-charts/ \
            --values=helm-chart/values.yaml \
            --set-string=acendTraining.deployments[0].ingress.labels.public=true \
            --atomic

      - name: Redeploy Deployments
        env:
          TRAINING_HELM_RELEASE: 'latest'
          TRAINING_NAMESPACE: 'pitc-quarkus-techlab-prod'
        run: |
          kubectl rollout restart deployment/$TRAINING_HELM_RELEASE-quarkus-techlab-puzzle \
            --kubeconfig $HOME/.kube/config \
            --namespace $TRAINING_NAMESPACE
          kubectl rollout restart deployment/$TRAINING_HELM_RELEASE-quarkus-techlab-mobi \
            --kubeconfig $HOME/.kube/config \
            --namespace $TRAINING_NAMESPACE

